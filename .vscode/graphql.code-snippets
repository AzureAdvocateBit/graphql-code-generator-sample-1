{
  "GraphQL types": {
    "scope": "graphql",
    "prefix": "types",
    "body": [
      "type Question {",
      "id: ID!",
      "question: String!",
      "correctAnswer: String!",
      "answers: [String!]!",
      "}"
    ]
  },

  "Schema": {
    "scope": "graphql",
    "prefix": "schema",
    "body": [
      "type Query {",
      "\tquestion(id: ID!): Question",
      "\tgetRandomQuestion: Question",
      "}",
      "",
      "schema {",
      "\tquery: Query",
      "}"
    ]
  },

  "Mutation": {
    "scope": "graphql",
    "prefix": "mutation",
    "body": [
      "type Answer {",
      "\tquestionId: ID",
      "\tquestion: String!",
      "\tsubmittedAnswer: String!",
      "\tcorrectAnswer: String!",
      "\tcorrect: Boolean",
      "}",
      "",
      "type Mutation {",
      "\tanswerQuestion(id: ID, answer: String): Answer",
      "}"
    ]
  },

  "Create GraphQL schema": {
    "scope": "graphql",
    "prefix": "complete",
    "body": [
      "type Question {",
      "  id: ID!",
      "  question: String!",
      "  correctAnswer: String!",
      "  answers: [String!]!",
      "}",
      "",
      "type Query {",
      "  question(id: ID!): Question",
      "  getRandomQuestion: Question",
      "}",
      "",
      "type Answer {",
      "  questionId: ID",
      "  question: String!",
      "  submittedAnswer: String!",
      "  correctAnswer: String!",
      "  correct: Boolean",
      "}",
      "",
      "type Mutation {",
      "  answerQuestion(id: ID, answer: String): Answer",
      "}",
      "",
      "schema {",
      "  query: Query",
      "  mutation: Mutation",
      "}"
    ],
    "description": "Create GraphQL schema"
  }
}
